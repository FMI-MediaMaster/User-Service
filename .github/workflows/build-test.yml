name: Build and test

on:
  workflow_call:

jobs: 
  build-test:
    runs-on: ubuntu-latest    

    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Get NodeJS version
        shell: bash
        run: |
          NODEJS_VERSION=$(jq -r '.packages[] | select(startswith("nodejs@")) | split("@")[1]' devbox.json)
          echo "NODEJS_VERSION=$NODEJS_VERSION" >> $GITHUB_ENV
              
      - name: Get PNPM version
        shell: bash
        run: |
          PNPM_VERSION=$(jq -r '.packageManager | split("@")[1]' package.json)
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - name: Install pnpm 
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        shell: bash
        run: pnpm install

      - name: Generate .env from .env.example
        shell: bash
        # env: Add variables for .env
        run: |
          > .env

          while IFS= read -r line || [[ -n "$line" ]]; do
            if [[ -z "$line" || "$line" =~ ^# ]]; then
              echo "$line" >> .env
              continue
            fi

            KEY="${line%%=*}"
            VALUE="${line#*=}"

            if [[ "$VALUE" =~ \<YOUR_.*\> ]]; then
              SECRET="${!KEY}"
              if [ -z "$SECRET" ]; then
                echo "Warning: environment variable '$KEY' is not set!"
                SECRET=""
              fi
              echo "$KEY=$SECRET" >> .env
            else
              echo "$line" >> .env
            fi
          done < .env.example

      - name: Build server
        shell: bash
        run: pnpm run build

      - name: Test server
        shell: bash
        run: pnpm run test

