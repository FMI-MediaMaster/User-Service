name: Push Docker image to multiple registries

on: 
  workflow_call:

permissions:
  checks: write
  packages: write
  contents: read
  attestations: write
  id-token: write

jobs: 
  push_to_registries:
    runs-on: ubuntu-latest    

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set Tag Name
        shell: bash
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          TAG_VERSION=${TAG_NAME#v}
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV

      - name: Get repository name
        shell: bash
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          REPO_NAME_LOWER=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=$REPO_NAME_LOWER" >> $GITHUB_ENV

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ vars.DOCKER_USERNAME }}/${{ env.REPO_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.TAG_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Get GitHub link
        id: github-link
        env:
          GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        shell: bash
        run: |
          RELEASE_LINK=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /orgs/FMI-MediaMaster/packages/container/${{ env.REPO_NAME }}/versions \
            --jq ".[] | select(.metadata.container.tags[]? == \"${{ env.TAG_VERSION }}\") | .html_url")
          
          RELEASE_LINK+="?tag=${{ env.TAG_VERSION }}"
        
          echo "github-link=$RELEASE_LINK" >> $GITHUB_OUTPUT

      - name: Get DockerHub link
        id: dockerhub-link
        shell: bash
        run: |
          RELEASE_LINK="https://hub.docker.com/layers/mediamasterorg/${{ env.REPO_NAME }}/${{ env.TAG_VERSION }}"
          echo "dockerhub-link=$RELEASE_LINK" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          generate_release_notes: true
          body: |
            **GitHub**: ${{ steps.github-link.outputs.github-link }}
            ```sh
              docker pull ghcr.io/fmi-mediamaster/${{ env.REPO_NAME }}:${{ env.TAG_VERSION }}
            ```
            <br />  
            
            **DockerHub**: ${{ steps.dockerhub-link.outputs.dockerhub-link }}
            ```sh
              docker pull mediamasterorg/${{ env.REPO_NAME }}:${{ env.TAG_VERSION }}
            ```
            <br />  
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
